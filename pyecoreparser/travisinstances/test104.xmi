<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="" xmi:version="2.0">
  <tool Name="language: c&#10;"/>
  <tool Name="sudo: true&#10;"/>
  <tool Name="cache:&#10;    directories:&#10;    - $HOME/.cabsnap&#10;    - $HOME/.cabal/packages&#10;"/>
  <tool Name="matrix:&#10;    include:&#10;    -   env: CABALVER=1.24 GHCVER=8.0.2&#10;        compiler: ': #GHC 8.0.2'&#10;        addons:&#10;            apt:&#10;                packages:&#10;                - cabal-install-1.24&#10;                - ghc-8.0.2&#10;                - alex-3.1.7&#10;                - happy-1.19.5&#10;                sources:&#10;                - hvr-ghc&#10;    -   env: CABALVER=1.24 GHCVER=8.2.2&#10;        compiler: ': #GHC 8.2.2'&#10;        addons:&#10;            apt:&#10;                packages:&#10;                - cabal-install-1.24&#10;                - ghc-8.2.2&#10;                - alex-3.1.7&#10;                - happy-1.19.5&#10;                sources:&#10;                - hvr-ghc&#10;"/>
  <job Name="before_cache">
    <command Name="">
      <tool Name="rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log"/>
    </command>
    <command Name="" depends="//@job.0/@command.0">
      <tool Name="rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar"/>
    </command>
  </job>
  <job Name="before_install">
    <command Name="">
      <tool Name="unset CC"/>
    </command>
    <command Name="" depends="//@job.1/@command.0">
      <tool Name="export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:/opt/alex/3.1.7/bin:/opt/happy/1.19.5/bin:$PATH"/>
    </command>
  </job>
  <job Name="install">
    <command Name="">
      <tool Name="cabal --version"/>
    </command>
    <command Name="" depends="//@job.2/@command.0">
      <tool Name="echo &quot;$(ghc --version) [$(ghc --print-project-git-commit-id 2&gt; /dev/null || echo '?')]&quot;"/>
    </command>
    <command Name="" depends="//@job.2/@command.1">
      <tool Name="if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ]; then zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz &gt; $HOME/.cabal/packages/hackage.haskell.org/00-index.tar; fi"/>
    </command>
    <command Name="" depends="//@job.2/@command.2">
      <tool Name="travis_retry cabal update -v"/>
    </command>
    <command Name="" depends="//@job.2/@command.3">
      <tool Name="sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config"/>
    </command>
    <command Name="" depends="//@job.2/@command.4">
      <tool Name="cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v &gt; installplan.txt"/>
    </command>
    <command Name="" depends="//@job.2/@command.5">
      <tool Name="sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt"/>
    </command>
    <command Name="" depends="//@job.2/@command.6">
      <tool Name="if diff -u installplan.txt $HOME/.cabsnap/installplan.txt; then echo &quot;cabal build-cache HIT&quot;; rm -rfv .ghc; cp -a $HOME/.cabsnap/ghc $HOME/.ghc; cp -a $HOME/.cabsnap/lib $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/; else echo &quot;cabal build-cache MISS&quot;; rm -rf $HOME/.cabsnap; mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin; cabal install --only-dependencies --enable-tests --enable-benchmarks; fi"/>
    </command>
    <command Name="" depends="//@job.2/@command.7">
      <tool Name="if [ ! -d $HOME/.cabsnap ]; then echo &quot;snapshotting package-db to build-cache&quot;; mkdir $HOME/.cabsnap; cp -a $HOME/.ghc $HOME/.cabsnap/ghc; cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/; fi"/>
    </command>
  </job>
  <job Name="script">
    <command Name="">
      <tool Name="if [ -f configure.ac ]; then autoreconf -i; fi"/>
    </command>
    <command Name="" depends="//@job.3/@command.0">
      <tool Name="cabal configure --enable-tests --enable-benchmarks -v2"/>
    </command>
    <command Name="" depends="//@job.3/@command.1">
      <tool Name="cabal build"/>
    </command>
    <command Name="" depends="//@job.3/@command.2">
      <tool Name="cabal test"/>
    </command>
  </job>
</devops2:Pipeline>
