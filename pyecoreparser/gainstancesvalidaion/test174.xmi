<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI" xmi:version="2.0">
  <when Trigger="workflow_dispatch: null&#10;"/>
  <when Trigger="push:&#10;    branches:&#10;    - main&#10;    - dev-*&#10;"/>
  <when Trigger="pull_request: null&#10;"/>
  <when Trigger="release:&#10;    types:&#10;    - published&#10;"/>
  <environment Key="PINS_ALLOW_RSC_SHORT_NAME" Value="1"/>
  <environment Key="PINS_FEATURE_PREVIEW" Value="1"/>
  <job Name="tests">
    <tool Name="${{ matrix.os }}"/>
    <tool Name="strategy:&#10;    fail-fast: false&#10;    matrix:&#10;        python:&#10;        - '3.7'&#10;        - '3.8'&#10;        - '3.9'&#10;        - '3.10'&#10;        - '3.11'&#10;        os:&#10;        - ubuntu-latest&#10;        pytest_opts:&#10;        - --workers 4 --tests-per-worker 1&#10;        requirements:&#10;        - ''&#10;        include:&#10;        -   os: ubuntu-latest&#10;            python: '3.7'&#10;            requirements: requirements/minimum.txt&#10;        -   os: macos-latest&#10;            python: '3.10'&#10;            pytest_opts: --workers 4 --tests-per-worker 1 -k pins/tests&#10;        -   os: windows-latest&#10;            python: '3.10'&#10;            pytest_opts: -k pins/tests&#10;"/>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command>
          <tool Name="actions/checkout@v4"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command depends="//@job.0/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-python@v4"/>
          <parameter Parameter="python-version: ${{ matrix.python }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Install dependencies" depends="//@job.0/@ifthenelse.1/@true/@command.0">
          <tool Name="python -m pip install --upgrade pip&#10;&#10;# optionally install from requirements file&#10;if [ $REQUIREMENTS ]; then&#10;  pip install -r $REQUIREMENTS&#10;fi&#10;&#10;python -m pip install -e .[test]&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Set up Cloud SDK" depends="//@job.0/@ifthenelse.2/@true/@command.0">
          <tool Name="google-github-actions/setup-gcloud@v0"/>
          <parameter Parameter="project_id: siuba-tests&#10;service_account_key: ${{ secrets.GCP_SA_KEY }}&#10;export_default_credentials: true&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Run tests" depends="//@job.0/@ifthenelse.3/@true/@command.0">
          <tool Name="pytest pins -m 'not fs_rsc and not skip_on_github' $PYTEST_OPTS&#10;"/>
          <parameter Parameter="AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}&#10;AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}&#10;AWS_REGION: us-east-1&#10;AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}&#10;AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}&#10;PYTEST_OPTS: ${{ matrix.pytest_opts }}&#10;REQUIREMENTS: ${{ matrix.requirements }}&#10;ACTION_OS: ${{ matrix.os }}&#10;no_proxy: '*'&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test-rsconnect">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command>
          <tool Name="actions/checkout@v4"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command depends="//@job.1/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-python@v4"/>
          <parameter Parameter="python-version: '3.10'&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Install dependencies" depends="//@job.1/@ifthenelse.1/@true/@command.0">
          <tool Name="python -m pip install --upgrade pip&#10;python -m pip install -r requirements/dev.txt&#10;python -m pip install -e .[test]&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="run Posit Connect" depends="//@job.1/@ifthenelse.2/@true/@command.0">
          <tool Name="docker-compose up --build -d&#10;make dev&#10;"/>
          <parameter Parameter="RSC_LICENSE: ${{ secrets.RSC_LICENSE }}&#10;GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Run tests" depends="//@job.1/@ifthenelse.3/@true/@command.0">
          <tool Name="pytest pins -m 'fs_rsc and not skip_on_github'&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test-fork">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="${{ github.event.pull_request.head.repo.fork }}">
      <true>
        <command>
          <tool Name="actions/checkout@v4"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ github.event.pull_request.head.repo.fork }}">
      <true>
        <command depends="//@job.2/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-python@v4"/>
          <parameter Parameter="python-version: '3.10'&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Install dependencies" depends="//@job.2/@ifthenelse.1/@true/@command.0">
          <tool Name="python -m pip install --upgrade pip&#10;&#10;python -m pip install -e .[test]&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Run tests" depends="//@job.2/@ifthenelse.2/@true/@command.0">
          <tool Name="# TODO: better way to disable all cloud backend tests?&#10;pytest pins -m 'not fs_rsc and not fs_s3 and not fs_gcs and not fs_abfs and not skip_on_github'&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="build-docs">
    <tool Name="ubuntu-latest"/>
    <command>
      <tool Name="actions/checkout@v3"/>
    </command>
    <command depends="//@job.3/@command.0">
      <tool Name="actions/setup-python@v4"/>
      <parameter Parameter="python-version: '3.10'&#10;"/>
    </command>
    <command Name="Install dependencies" depends="//@job.3/@command.1">
      <tool Name="python -m pip install --upgrade pip&#10;python -m pip install -r requirements/dev.txt&#10;python -m pip install -e .&#10;python -m ipykernel install --user&#10;"/>
    </command>
    <command Name="Set up Quarto" depends="//@job.3/@command.2">
      <tool Name="quarto-dev/quarto-actions/setup@v2"/>
    </command>
    <command Name="Build docs" depends="//@job.3/@command.3">
      <tool Name="make docs-build&#10;"/>
    </command>
    <command Name="Save docs artifact" depends="//@job.3/@command.4">
      <tool Name="actions/upload-artifact@v3"/>
      <parameter Parameter="name: docs-html&#10;path: docs/_site&#10;"/>
    </command>
  </job>
  <job Name="preview-docs">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="${{github.event_name == 'pull_request' &amp;&amp; !github.event.pull_request.head.repo.fork }}">
      <true>
        <command>
          <tool Name="actions/download-artifact@v3"/>
          <parameter Parameter="name: docs-html&#10;path: docs/_site&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{github.event_name == 'pull_request' &amp;&amp; !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Create Github Deployment" depends="//@job.4/@ifthenelse.3/@true/@ifthenelse.0/@true/@command.0">
          <tool Name="bobheadxi/deployments@v0.4.3"/>
          <parameter Parameter="step: start&#10;token: ${{ secrets.GITHUB_TOKEN }}&#10;env: ${{ env.RELEASE_NAME }}&#10;ref: ${{ github.head_ref }}&#10;transient: true&#10;logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{github.event_name == 'pull_request' &amp;&amp; !github.event.pull_request.head.repo.fork }}">
      <true>
        <command Name="Netlify docs preview" depends="//@job.4/@ifthenelse.1/@true/@command.0">
          <tool Name="npm install -g netlify-cli&#10;# push main branch to production, others to preview --&#10;netlify deploy --dir=docs/_site --alias=&quot;${ALIAS}&quot;&#10;"/>
          <parameter Parameter="NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}&#10;NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}&#10;ALIAS: ${{ steps.deployment.outputs.env }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{github.event_name == 'pull_request' &amp;&amp; !github.event.pull_request.head.repo.fork }}">
      <true>
        <ifthenelse Condition="${{github.event_name == 'pull_request'}}">
          <true>
            <command Name="Configure pull release name" depends="//@job.4/@ifthenelse.0/@true/@command.0">
              <tool Name="echo &quot;RELEASE_NAME=pr-${PR_NUMBER}&quot; &gt;&gt; $GITHUB_ENV&#10;"/>
              <parameter Parameter="PR_NUMBER: ${{ github.event.number }}&#10;"/>
            </command>
          </true>
        </ifthenelse>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{github.event_name == 'pull_request' &amp;&amp; !github.event.pull_request.head.repo.fork }}">
      <true>
        <ifthenelse Condition="${{ always() }}">
          <true>
            <command Name="Update Github Deployment" depends="//@job.4/@ifthenelse.2/@true/@command.0">
              <tool Name="bobheadxi/deployments@v0.4.3"/>
              <parameter Parameter="step: finish&#10;token: ${{ secrets.GITHUB_TOKEN }}&#10;status: ${{ job.status }}&#10;deployment_id: ${{ steps.deployment.outputs.deployment_id }}&#10;env_url: https://${{ steps.deployment.outputs.env }}--pins-python.netlify.app&#10;logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}&#10;"/>
            </command>
          </true>
        </ifthenelse>
      </true>
    </ifthenelse>
  </job>
  <job Name="publish-docs">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="github.ref == 'refs/heads/main'">
      <true>
        <command>
          <tool Name="actions/download-artifact@v3"/>
          <parameter Parameter="name: docs-html&#10;path: docs/_site&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="github.ref == 'refs/heads/main'">
      <true>
        <command depends="//@job.5/@ifthenelse.0/@true/@command.0">
          <tool Name="peaceiris/actions-gh-pages@v3"/>
          <parameter Parameter="github_token: ${{ secrets.GITHUB_TOKEN }}&#10;publish_dir: docs/_site&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="release-pypi">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="github.event_name == 'release'">
      <true>
        <command>
          <tool Name="actions/checkout@v4"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="github.event_name == 'release'">
      <true>
        <command depends="//@job.6/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-python@v4"/>
          <parameter Parameter="python-version: '3.10'&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="github.event_name == 'release'">
      <true>
        <command Name="Build Package" depends="//@job.6/@ifthenelse.1/@true/@command.0">
          <tool Name="python -m pip install build wheel&#10;python -m build --sdist --wheel&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="github.event_name == 'release'">
      <true>
        <command Name="Deploy to Test PyPI" depends="//@job.6/@ifthenelse.2/@true/@command.0">
          <tool Name="pypa/gh-action-pypi-publish@release/v1"/>
          <parameter Parameter="user: __token__&#10;password: ${{ secrets.PYPI_API_TOKEN }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
