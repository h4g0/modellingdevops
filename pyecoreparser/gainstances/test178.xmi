<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="Go" xmi:version="2.0">
  <when Trigger="pull_request:&#10;    branches:&#10;    - master&#10;"/>
  <when Trigger="push:&#10;    branches:&#10;    - master&#10;"/>
  <job Name="build">
    <tool Name="${{ matrix.os }}"/>
    <tool Name="strategy:&#10;    max-parallel: 4&#10;    matrix:&#10;        go-version:&#10;        - 1.20.x&#10;        - 1.19.x&#10;        - 1.18.x&#10;        os:&#10;        - ubuntu-latest&#10;        - windows-latest&#10;        - macos-latest&#10;"/>
    <command Name="Set up Go ${{ matrix.go-version }}">
      <tool Name="actions/setup-go@v1"/>
      <parameter Parameter="go-version: ${{ matrix.go-version }}&#10;"/>
    </command>
    <command Name="Check out code into the Go module directory" depends="//@job.0/@command.0">
      <tool Name="actions/checkout@v1"/>
    </command>
    <ifthenelse Condition="matrix.os == 'windows-latest'">
      <true>
        <command Name="Build on ${{ matrix.os }}" depends="//@job.0/@command.1">
          <tool Name="go test -race -v ./..."/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.os == 'macos-latest'">
      <true>
        <command Name="Build on ${{ matrix.os }}" depends="//@job.0/@ifthenelse.0/@true/@command.0">
          <tool Name="go test -race -v ./..."/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.os == 'ubuntu-latest'">
      <true>
        <command Name="Build on ${{ matrix.os }}" depends="//@job.0/@ifthenelse.1/@true/@command.0">
          <tool Name="diff -au &lt;(gofmt -d .) &lt;(printf &quot;&quot;)&#10;go test -race -v ./...&#10;go vet -asmdecl .&#10;./test-architectures.sh&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
