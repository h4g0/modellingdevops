<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="Test &amp; deploy" xmi:version="2.0">
  <when Trigger="push:&#10;    branches:&#10;    - master&#10;    tags:&#10;    - '**'&#10;"/>
  <when Trigger="pull_request:&#10;    branches:&#10;    - master&#10;"/>
  <when Trigger="workflow_dispatch: null&#10;"/>
  <job Name="test">
    <tool Name="ubuntu-latest"/>
    <command>
      <tool Name="actions/checkout@v2"/>
    </command>
    <command Name="Set up JDK 11" depends="//@job.0/@command.0">
      <tool Name="actions/setup-java@v2"/>
      <parameter Parameter="java-version: '11'&#10;distribution: adopt&#10;"/>
    </command>
    <command Name="Cache" depends="//@job.0/@command.1">
      <tool Name="actions/cache@v2.1.6"/>
      <parameter Parameter="path: /home/runner/.m2/repository&#10;key: ${{ runner.os }}-${{ hashFiles('pom.xml') }}&#10;"/>
    </command>
    <command Name="Build with Maven" depends="//@job.0/@command.2">
      <tool Name="mvn -B test --file pom.xml"/>
    </command>
  </job>
  <job Name="github-release" depends="//@job.0">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command>
          <tool Name="actions/checkout@v2"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command Name="Set up JDK 11" depends="//@job.1/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-java@v2"/>
          <parameter Parameter="java-version: '11'&#10;distribution: adopt&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command Name="Cache" depends="//@job.1/@ifthenelse.1/@true/@command.0">
          <tool Name="actions/cache@v2.1.6"/>
          <parameter Parameter="path: /home/runner/.m2/repository&#10;key: ${{ runner.os }}-${{ hashFiles('pom.xml') }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command Name="Build with Maven" depends="//@job.1/@ifthenelse.2/@true/@command.0">
          <tool Name="mvn -B package --file pom.xml -DskipTests=true"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command Name="Create release archive" depends="//@job.1/@ifthenelse.3/@true/@command.0">
          <tool Name="mkdir packager-tmp &amp;&amp; cp -r resources/* ./packager-tmp &amp;&amp; cp target/*.jar ./packager-tmp&#10;cd ./packager-tmp &amp;&amp; tar -czvf joal.tar.gz * &amp;&amp; mv ./joal.tar.gz ../ &amp;&amp; cd ..&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.ref, 'refs/tags/')">
      <true>
        <command Name="Create Github release" depends="//@job.1/@ifthenelse.4/@true/@command.0">
          <tool Name="ncipollo/release-action@v1.8.6"/>
          <parameter Parameter="allowUpdates: true&#10;artifactErrorsFailBuild: true&#10;artifacts: joal.tar.gz&#10;draft: true&#10;token: ${{ secrets.GITHUB_TOKEN }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="docker" depends="//@job.0">
    <tool Name="ubuntu-latest"/>
    <command>
      <tool Name="actions/checkout@v2"/>
    </command>
    <command Name="Prepare" depends="//@job.2/@command.0">
      <tool Name="DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}&#10;VERSION=latest&#10;SHORTREF=${GITHUB_SHA::8}&#10;&#10;# If this is git tag, use the tag name as a docker tag&#10;if [[ $GITHUB_REF == refs/tags/* ]]; then&#10;  VERSION=${GITHUB_REF#refs/tags/}&#10;else&#10;  VERSION=${SHORTREF}&#10;fi&#10;TAGS=&quot;${DOCKER_IMAGE}:${VERSION}&quot;&#10;&#10;# If the VERSION looks like a version number, assume that&#10;# this is the most recent version of the image and also&#10;# tag it 'latest'.&#10;if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then&#10;  TAGS=&quot;$TAGS,${DOCKER_IMAGE}:latest&quot;&#10;fi&#10;&#10;# Set output parameters.&#10;echo ::set-output name=tags::${TAGS}&#10;echo ::set-output name=docker_image::${DOCKER_IMAGE}&#10;"/>
    </command>
    <command Name="Set up QEMU" depends="//@job.2/@command.1">
      <tool Name="docker/setup-qemu-action@master"/>
      <parameter Parameter="platforms: all&#10;"/>
    </command>
    <command Name="Set up Docker Buildx" depends="//@job.2/@command.2">
      <tool Name="docker/setup-buildx-action@master"/>
    </command>
    <command Name="Build" depends="//@job.2/@ifthenelse.0/@true/@command.0">
      <tool Name="docker/build-push-action@v2"/>
      <parameter Parameter="builder: ${{ steps.buildx.outputs.name }}&#10;context: .&#10;file: ./Dockerfile&#10;platforms: linux/amd64,linux/arm64,linux/arm/v7&#10;push: ${{ startsWith(github.ref, 'refs/tags/') }}&#10;tags: ${{ steps.prep.outputs.tags }}&#10;"/>
    </command>
    <ifthenelse Condition="${{ github.event_name != 'pull_request' &amp;&amp; startsWith(github.ref, 'refs/tags/') }}">
      <true>
        <command Name="Login to DockerHub" depends="//@job.2/@command.3">
          <tool Name="docker/login-action@v1"/>
          <parameter Parameter="username: ${{ secrets.DOCKER_USERNAME }}&#10;password: ${{ secrets.DOCKER_PASSWORD }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
