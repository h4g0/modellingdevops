<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI/CD" xmi:version="2.0">
  <when Trigger="push:&#10;    branches:&#10;    - main&#10;"/>
  <when Trigger="pull_request:&#10;    branches:&#10;    - main&#10;"/>
  <job Name="ci-cd">
    <permission Key="contents" Value="write"/>
    <tool Name="ubuntu-latest"/>
    <command Name="Check out repository">
      <tool Name="actions/checkout@v3"/>
    </command>
    <command Name="Set up Python 3.10" depends="//@job.0/@command.0">
      <tool Name="actions/setup-python@v4"/>
      <parameter Parameter="python-version: '3.10'&#10;"/>
    </command>
    <command Name="Set up Node.js" depends="//@job.0/@command.1">
      <tool Name="actions/setup-node@v3"/>
      <parameter Parameter="node-version: '20'&#10;"/>
    </command>
    <command Name="Install dependencies" depends="//@job.0/@command.2">
      <tool Name="python -m pip install --upgrade pip&#10;pip install poetry&#10;poetry install&#10;npm ci&#10;"/>
    </command>
    <command Name="Lint with flake8" depends="//@job.0/@command.3">
      <tool Name="poetry run flake8 chatiq&#10;"/>
    </command>
    <command Name="Check code formatting" depends="//@job.0/@command.4">
      <tool Name="poetry run black --check chatiq&#10;"/>
    </command>
    <command Name="Check imports with isort" depends="//@job.0/@command.5">
      <tool Name="poetry run isort chatiq --check --diff&#10;"/>
    </command>
    <command Name="Run Pytype" depends="//@job.0/@command.6">
      <tool Name="poetry run pytype chatiq&#10;"/>
    </command>
    <command Name="Run unit tests and measure code coverage" depends="//@job.0/@command.7">
      <tool Name="poetry run coverage run -m pytest&#10;poetry run coverage xml&#10;"/>
    </command>
    <command Name="Upload coverage reports to Codecov" depends="//@job.0/@command.8">
      <tool Name="codecov/codecov-action@v3"/>
    </command>
    <command Name="Run semantic-release" depends="//@job.0/@command.9">
      <tool Name="npx semantic-release&#10;"/>
      <parameter Parameter="GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}&#10;"/>
    </command>
    <ifthenelse Condition="${{ steps.semantic-release.outputs.nextVer != null }}">
      <true>
        <command Name="Publish package" depends="//@job.0/@command.10">
          <tool Name="poetry publish --build -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ steps.semantic-release.outputs.nextVer != null }}">
      <true>
        <command Name="Set up QEMU" depends="//@job.0/@ifthenelse.0/@true/@command.0">
          <tool Name="docker/setup-qemu-action@v2"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ steps.semantic-release.outputs.nextVer != null }}">
      <true>
        <command Name="Set up Docker Buildx" depends="//@job.0/@ifthenelse.1/@true/@command.0">
          <tool Name="docker/setup-buildx-action@v2"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ steps.semantic-release.outputs.nextVer != null }}">
      <true>
        <command Name="Login to Docker Hub" depends="//@job.0/@ifthenelse.2/@true/@command.0">
          <tool Name="docker/login-action@v2"/>
          <parameter Parameter="username: ${{ secrets.DOCKERHUB_USERNAME }}&#10;password: ${{ secrets.DOCKERHUB_TOKEN }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ steps.semantic-release.outputs.nextVer != null }}">
      <true>
        <command Name="Build and push" depends="//@job.0/@ifthenelse.3/@true/@command.0">
          <tool Name="docker/build-push-action@v4"/>
          <parameter Parameter="platforms: linux/amd64,linux/arm64&#10;push: true&#10;tags: 'yujiosaka/chatiq:${{ steps.semantic-release.outputs.nextVer }}&#10;&#10;    yujiosaka/chatiq:latest&#10;&#10;    '&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
