<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI" xmi:version="2.0">
  <when Trigger="push: null&#10;"/>
  <when Trigger="pull_request: null&#10;"/>
  <job Name="pre-commit">
    <tool Name="ubuntu-22.04"/>
    <command>
      <tool Name="actions/checkout@v3"/>
    </command>
    <command Name="Set up Python" depends="//@job.0/@command.0">
      <tool Name="actions/setup-python@v4"/>
      <parameter Parameter="python-version: 3.7.14&#10;"/>
    </command>
    <command Name="Upgrade pip" depends="//@job.0/@command.1">
      <tool Name="python -m pip install --upgrade pip"/>
    </command>
    <command Name="Install pre-commit" depends="//@job.0/@command.2">
      <tool Name="pip install pre-commit"/>
    </command>
    <command Name="Check pre-commit version" depends="//@job.0/@command.3">
      <tool Name="pre-commit --version"/>
    </command>
    <command Name="Set up hooks" depends="//@job.0/@command.4">
      <tool Name="pre-commit install"/>
    </command>
    <command Name="Check style" depends="//@job.0/@command.5">
      <tool Name="pre-commit run --all-files"/>
    </command>
  </job>
  <job Name="test">
    <tool Name="${{ matrix.os }}"/>
    <tool Name="strategy:&#10;    fail-fast: false&#10;    matrix:&#10;        python-version:&#10;        - 3.7.9&#10;        - 3.8.10&#10;        - 3.9.13&#10;        - 3.10.9&#10;        - 3.11.1&#10;        - pypy3.9-v7.3.9&#10;        os:&#10;        - macos-11&#10;        - macos-12&#10;        - ubuntu-20.04&#10;        - ubuntu-22.04&#10;        - windows-2019&#10;        - windows-2022&#10;        exclude:&#10;        -   os: macos-11&#10;            python-version: pypy3.9-v7.3.9&#10;        -   os: macos-12&#10;            python-version: pypy3.9-v7.3.9&#10;        -   os: ubuntu-22.04&#10;            python-version: 3.7.9&#10;        -   os: ubuntu-22.04&#10;            python-version: 3.8.10&#10;"/>
    <command>
      <tool Name="actions/checkout@v3"/>
    </command>
    <command Name="Set up Python ${{ matrix.python-version }}" depends="//@job.1/@command.0">
      <tool Name="actions/setup-python@v4"/>
      <parameter Parameter="python-version: ${{ matrix.python-version }}&#10;architecture: x64&#10;cache: pip&#10;"/>
    </command>
    <command Name="Check python version" depends="//@job.1/@command.1">
      <tool Name="python -c &quot;import sys; import platform; print('Python %s implementation %s on %s' % (sys.version, platform.python_implementation(), sys.platform))&quot;"/>
    </command>
    <command Name="Upgrade pip" depends="//@job.1/@command.2">
      <tool Name="python -m pip install --upgrade pip"/>
    </command>
    <command Name="list installed packages" depends="//@job.1/@ifthenelse.1/@true/@command.0">
      <tool Name="python -m pip list"/>
    </command>
    <ifthenelse Condition="${{ matrix.python-version == 'pypy3.9-v7.3.9' }}">
      <true>
        <command Name="Install mip for testing (PyPy)" depends="//@job.1/@command.3">
          <tool Name="python -m pip install .[test,numpy]"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ matrix.python-version != 'pypy3.9-v7.3.9' }}">
      <true>
        <command Name="Install mip for testing (CPython)" depends="//@job.1/@ifthenelse.0/@true/@command.0">
          <tool Name="python -m pip install .[test,numpy,gurobi]"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ matrix.python-version == 'pypy3.9-v7.3.9'}}">
      <true>
        <command Name="Run tests PyPy" depends="//@job.1/@command.4">
          <tool Name="python -m pytest test --verbose --color=yes --doctest-modules --ignore=&quot;test/test_gurobi.py&quot;&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ matrix.python-version != 'pypy3.9-v7.3.9'}}">
      <true>
        <command Name="Run tests" depends="//@job.1/@ifthenelse.2/@true/@command.0">
          <tool Name="python -m pytest test --verbose --color=yes --doctest-modules -Werror&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
