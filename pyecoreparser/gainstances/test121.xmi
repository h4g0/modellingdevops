<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="linux" xmi:version="2.0">
  <when Trigger="push:&#10;    branches:&#10;    - master&#10;"/>
  <when Trigger="pull_request:&#10;    branches:&#10;    - master&#10;"/>
  <job Name="build">
    <tool Name="${{ matrix.os }}"/>
    <tool Name="strategy:&#10;    matrix:&#10;        os:&#10;        - ubuntu-latest&#10;"/>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command>
          <tool Name="actions/checkout@v1"/>
          <parameter Parameter="submodules: true&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="install packages" depends="//@job.0/@ifthenelse.0/@true/@command.0">
          <tool Name="sudo apt-get update &amp;&amp; sudo apt-get install -y xorg-dev libglu1-mesa-dev xpra xserver-xorg-video-dummy freeglut3-dev"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="configure" depends="//@job.0/@ifthenelse.1/@true/@command.0">
          <tool Name="cd test &amp;&amp; mkdir build &amp;&amp; cd build &amp;&amp; cmake -DCMAKE_BUILD_TYPE=Debug -DPOLYSCOPE_BACKEND_OPENGL3_GLFW=ON -DPOLYSCOPE_BACKEND_OPENGL_MOCK=ON .."/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="build" depends="//@job.0/@ifthenelse.2/@true/@command.0">
          <tool Name="cd test/build &amp;&amp; make"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="run test" depends="//@job.0/@ifthenelse.3/@true/@command.0">
          <tool Name="cd test/build &amp;&amp; ./bin/polyscope-test --gtest_catch_exceptions=0 backend=openGL_mock"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="build_shared">
    <tool Name="${{ matrix.os }}"/>
    <tool Name="strategy:&#10;    matrix:&#10;        os:&#10;        - ubuntu-latest&#10;"/>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command>
          <tool Name="actions/checkout@v1"/>
          <parameter Parameter="submodules: true&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="install packages" depends="//@job.1/@ifthenelse.0/@true/@command.0">
          <tool Name="sudo apt-get update &amp;&amp; sudo apt-get install -y xorg-dev libglu1-mesa-dev xpra xserver-xorg-video-dummy freeglut3-dev"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="configure" depends="//@job.1/@ifthenelse.1/@true/@command.0">
          <tool Name="cd test &amp;&amp; mkdir build &amp;&amp; cd build &amp;&amp; cmake -DBUILD_SHARED_LIBS=TRUE -DCMAKE_BUILD_TYPE=Debug -DPOLYSCOPE_BACKEND_OPENGL3_GLFW=ON -DPOLYSCOPE_BACKEND_OPENGL_MOCK=ON .."/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="build" depends="//@job.1/@ifthenelse.2/@true/@command.0">
          <tool Name="cd test/build &amp;&amp; make"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="! contains(toJSON(github.event.commits.*.message), '[ci skip]')">
      <true>
        <command Name="run test" depends="//@job.1/@ifthenelse.3/@true/@command.0">
          <tool Name="cd test/build &amp;&amp; ./bin/polyscope-test --gtest_catch_exceptions=0 backend=openGL_mock"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
