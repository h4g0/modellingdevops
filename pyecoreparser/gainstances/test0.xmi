<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI" xmi:version="2.0">
  <when Trigger="push:&#10;    branches:&#10;    - main&#10;    tags:&#10;    - '*'&#10;"/>
  <when Trigger="pull_request: null&#10;"/>
  <environment Key="LATEST_PY_VERSION" Value="3.10"/>
  <job Name="tests">
    <tool Name="ubuntu-latest"/>
    <tool Name="strategy:&#10;    matrix:&#10;        python-version:&#10;        - '3.8'&#10;        - '3.9'&#10;        - '3.10'&#10;        - '3.11'&#10;"/>
    <command>
      <tool Name="actions/checkout@v3"/>
    </command>
    <command Name="Set up Python ${{ matrix.python-version }}" depends="//@job.0/@command.0">
      <tool Name="actions/setup-python@v4"/>
      <parameter Parameter="python-version: ${{ matrix.python-version }}&#10;"/>
    </command>
    <command Name="Install dependencies" depends="//@job.0/@command.1">
      <tool Name="python -m pip install --upgrade pip&#10;"/>
    </command>
    <command Name="Install rio-cogeo" depends="//@job.0/@command.2">
      <tool Name="python -m pip install .[&quot;test&quot;]"/>
    </command>
    <command Name="Run test" depends="//@job.0/@ifthenelse.0/@true/@command.0">
      <tool Name="python -m pytest --cov rio_cogeo --cov-report xml --cov-report term-missing"/>
    </command>
    <ifthenelse Condition="${{ matrix.python-version == env.LATEST_PY_VERSION }}">
      <true>
        <command Name="Run pre-commit" depends="//@job.0/@command.3">
          <tool Name="python -m pip install pre-commit&#10;pre-commit run --all-files&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="${{ matrix.python-version == env.LATEST_PY_VERSION }}">
      <true>
        <command Name="Upload Results" depends="//@job.0/@command.4">
          <tool Name="codecov/codecov-action@v1"/>
          <parameter Parameter="file: ./coverage.xml&#10;flags: unittests&#10;name: ${{ matrix.platform }}-${{ matrix.tox-env }}&#10;fail_ci_if_error: false&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="publish">
    <tool Name="ubuntu-latest"/>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <command>
          <tool Name="actions/checkout@v3"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <command Name="Set up Python" depends="//@job.1/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/setup-python@v4"/>
          <parameter Parameter="python-version: ${{ env.LATEST_PY_VERSION }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <command Name="Install dependencies" depends="//@job.1/@ifthenelse.1/@true/@command.0">
          <tool Name="python -m pip install --upgrade pip&#10;python -m pip install flit&#10;python -m pip install .&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <command Name="Set tag version" depends="//@job.1/@ifthenelse.2/@true/@command.0">
          <tool Name="echo &quot;version=${GITHUB_REF#refs/*/}&quot;&#10;echo &quot;version=${GITHUB_REF#refs/*/}&quot; &gt;&gt; $GITHUB_OUTPUT&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <command Name="Set module version" depends="//@job.1/@ifthenelse.3/@true/@command.0">
          <tool Name="echo version=$(python -c'import rio_cogeo; print(rio_cogeo.__version__)') &gt;&gt; $GITHUB_OUTPUT&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'">
      <true>
        <ifthenelse Condition="${{ steps.tag.outputs.version }} == ${{ steps.module.outputs.version}}">
          <true>
            <command Name="Build and publish" depends="//@job.1/@ifthenelse.4/@true/@command.0">
              <tool Name="flit publish"/>
              <parameter Parameter="FLIT_USERNAME: ${{ secrets.PYPI_USERNAME }}&#10;FLIT_PASSWORD: ${{ secrets.PYPI_PASSWORD }}&#10;"/>
            </command>
          </true>
        </ifthenelse>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
