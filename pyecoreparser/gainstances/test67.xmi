<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI" xmi:version="2.0">
  <when Trigger="merge_group: null&#10;"/>
  <when Trigger="pull_request: null&#10;"/>
  <when Trigger="push:&#10;    branches:&#10;    - master&#10;"/>
  <environment Key="RUST_BACKTRACE" Value="1"/>
  <job Name="style">
    <tool Name="ubuntu-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust" depends="//@job.0/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: stable&#10;override: true&#10;components: rustfmt&#10;"/>
    </command>
    <command Name="Algebra - format" depends="//@job.0/@command.1">
      <tool Name="cargo fmt --all -- --check"/>
    </command>
    <command Name="Curves - format" depends="//@job.0/@command.2">
      <tool Name="cargo fmt --all -- --check"/>
    </command>
  </job>
  <job Name="docs">
    <tool Name="ubuntu-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust" depends="//@job.1/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: stable&#10;override: true&#10;components: rustfmt&#10;"/>
    </command>
    <command Name="Algebra - doc" depends="//@job.1/@command.1">
      <tool Name="cargo doc --all --no-deps --document-private-items --all-features"/>
    </command>
    <command Name="Curves - doc" depends="//@job.1/@command.2">
      <tool Name="cargo doc --all --no-deps --document-private-items --all-features"/>
    </command>
  </job>
  <job Name="check">
    <environment Key="RUSTFLAGS" Value="-Dwarnings"/>
    <tool Name="ubuntu-latest"/>
    <tool Name="strategy:&#10;    matrix:&#10;        rust:&#10;        - stable&#10;        - nightly&#10;"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust (${{ matrix.rust }})" depends="//@job.2/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: ${{ matrix.rust }}&#10;override: true&#10;"/>
    </command>
    <command depends="//@job.2/@command.1">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}&#10;"/>
    </command>
    <command Name="Algebra - Check examples" depends="//@job.2/@command.2">
      <tool Name="cargo check --examples --all"/>
    </command>
    <command Name="Curves - Check examples" depends="//@job.2/@command.3">
      <tool Name="cargo check --examples --all"/>
    </command>
    <ifthenelse Condition="matrix.rust == 'stable'">
      <true>
        <command Name="Algebra - Check examples with all features on stable" depends="//@job.2/@command.4">
          <tool Name="cargo check --examples --all-features --all"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.rust == 'stable'">
      <true>
        <command Name="Curves - Check examples with all features on stable" depends="//@job.2/@ifthenelse.0/@true/@command.0">
          <tool Name="cargo check --examples --all-features --all"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.rust == 'nightly'">
      <true>
        <command Name="Algebra - Check benchmarks on nightly" depends="//@job.2/@ifthenelse.1/@true/@command.0">
          <tool Name="cargo check --all-features --examples --workspace --benches"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.rust == 'nightly'">
      <true>
        <command Name="Curves - Check benchmarks on nightly" depends="//@job.2/@ifthenelse.2/@true/@command.0">
          <tool Name="cargo check --all-features --examples --workspace --benches"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test">
    <environment Key="RUSTFLAGS" Value="-Dwarnings"/>
    <tool Name="ubuntu-latest"/>
    <tool Name="strategy:&#10;    matrix:&#10;        rust:&#10;        - stable&#10;        - nightly&#10;"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust (${{ matrix.rust }})" depends="//@job.3/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: ${{ matrix.rust }}&#10;override: true&#10;"/>
    </command>
    <command depends="//@job.3/@command.1">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}&#10;"/>
    </command>
    <command Name="Check examples" depends="//@job.3/@command.2">
      <tool Name="actions-rs/cargo@v1"/>
      <parameter Parameter="command: check&#10;args: --examples --all&#10;"/>
    </command>
    <command Name="Test" depends="//@job.3/@ifthenelse.1/@true/@command.0">
      <tool Name="actions-rs/cargo@v1"/>
      <parameter Parameter="command: test&#10;args: --workspace --all-features --exclude ark-poly-benches --exclude ark-algebra-test-templates&#10;"/>
    </command>
    <ifthenelse Condition="matrix.rust == 'stable'">
      <true>
        <command Name="Check examples with all features on stable" depends="//@job.3/@command.3">
          <tool Name="actions-rs/cargo@v1"/>
          <parameter Parameter="command: check&#10;args: --examples --all-features --all&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.rust == 'nightly'">
      <true>
        <command Name="Check benchmarks on nightly" depends="//@job.3/@ifthenelse.0/@true/@command.0">
          <tool Name="actions-rs/cargo@v1"/>
          <parameter Parameter="command: check&#10;args: --all-features --examples --workspace --benches&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.rust == 'nightly'">
      <true>
        <command Name="Test assembly on nightly" depends="//@job.3/@command.4">
          <tool Name="actions-rs/cargo@v1"/>
          <parameter Parameter="command: test&#10;args: '--workspace --package ark-test-curves --all-features '&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="directories">
    <tool Name="ubuntu-latest"/>
    <command>
      <tool Name="actions/checkout@v4"/>
    </command>
    <command depends="//@job.4/@command.0">
      <tool Name="# shellcheck disable=SC2086&#10;echo &quot;dir=$(find . -mindepth 1 -maxdepth 1 -type d | jq -R -s -c 'split(&quot;\n&quot;)[:-1]')&quot; &gt;&gt; $GITHUB_OUTPUT&#10;"/>
    </command>
  </job>
  <job Name="test-curves">
    <tool Name="ubuntu-latest"/>
    <tool Name="strategy:&#10;    matrix:&#10;        dir: ${{fromJson(needs.directories.outputs.dir)}}&#10;        exclude:&#10;        -   dir: ./scripts&#10;        -   dir: ./curve-constraint-tests&#10;        -   dir: ./mnt4_753&#10;        -   dir: ./mnt6_753&#10;        -   dir: ./cp6_782&#10;"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Run tests" depends="//@job.5/@command.0">
      <tool Name="cd ${{matrix.dir}}&#10;cargo test --all-features&#10;"/>
    </command>
  </job>
  <job Name="test-mnt4-753">
    <tool Name="macos-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Check if source code updated" depends="//@job.6/@command.0">
      <tool Name="dorny/paths-filter@v2.11.1"/>
      <parameter Parameter="filters: &quot;mnt4_753_is_updated:\n  - 'curves/mnt4_753/**'\n&quot;&#10;"/>
    </command>
    <command Name="Generate lockfile" depends="//@job.6/@command.1">
      <tool Name="cargo generate-lockfile"/>
    </command>
    <command Name="Check if deps updated" depends="//@job.6/@command.2">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/curves/Cargo.lock') }}&#10;"/>
    </command>
    <ifthenelse Condition="${{ steps.check-diff.outputs.mnt4_753_is_updated == 'true' || steps.deps-updated.outputs.cache-hit != 'true' }}">
      <true>
        <command Name="Conditionally run the tests" depends="//@job.6/@command.3">
          <tool Name="cd mnt4_753/&#10;cargo test --all-features&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test-mnt6-753">
    <tool Name="macos-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Check if source code updated" depends="//@job.7/@command.0">
      <tool Name="dorny/paths-filter@v2.11.1"/>
      <parameter Parameter="filters: &quot;mnt6_753_is_updated:\n  - 'mnt6_753/**'\n&quot;&#10;"/>
    </command>
    <command Name="Generate lockfile" depends="//@job.7/@command.1">
      <tool Name="cargo generate-lockfile"/>
    </command>
    <command Name="Check if deps updated" depends="//@job.7/@command.2">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/curves/Cargo.lock') }}&#10;"/>
    </command>
    <ifthenelse Condition="${{ steps.check-diff.outputs.mnt6_753_is_updated == 'true' || steps.deps-updated.outputs.cache-hit != 'true' }}">
      <true>
        <command Name="Conditionally run the tests" depends="//@job.7/@command.3">
          <tool Name="cd mnt6_753/&#10;cargo test --all-features&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test-cp6_782">
    <tool Name="ubuntu-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Check if source code updated" depends="//@job.8/@command.0">
      <tool Name="dorny/paths-filter@v2.11.1"/>
      <parameter Parameter="filters: &quot;cp6_782_is_updated:\n  - 'cp6_782/**'\n&quot;&#10;"/>
    </command>
    <command Name="Generate lockfile" depends="//@job.8/@command.1">
      <tool Name="cargo generate-lockfile"/>
    </command>
    <command Name="Check if deps updated" depends="//@job.8/@command.2">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/curves/Cargo.lock') }}&#10;"/>
    </command>
    <ifthenelse Condition="${{ steps.check-diff.outputs.cp6_782_is_updated == 'true' || steps.deps-updated.outputs.cache-hit != 'true' }}">
      <true>
        <command Name="Conditionally run the tests" depends="//@job.8/@command.3">
          <tool Name="cd cp6_782/&#10;cargo test --all-features&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
  <job Name="test_assembly">
    <environment Key="RUSTFLAGS" Value="-Dwarnings"/>
    <tool Name="ubuntu-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust nightly" depends="//@job.9/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: nightly&#10;override: true&#10;"/>
    </command>
    <command depends="//@job.9/@command.1">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}&#10;"/>
    </command>
    <command Name="Test assembly on nightly" depends="//@job.9/@command.2">
      <tool Name="actions-rs/cargo@v1"/>
      <parameter Parameter="command: test&#10;args: --workspace --package ark-test-curves --all-features&#10;"/>
    </command>
  </job>
  <job Name="check_no_std">
    <tool Name="ubuntu-latest"/>
    <command Name="Checkout">
      <tool Name="actions/checkout@v4"/>
    </command>
    <command Name="Install Rust" depends="//@job.10/@command.0">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="toolchain: stable&#10;target: aarch64-unknown-none&#10;override: true&#10;"/>
    </command>
    <command depends="//@job.10/@command.1">
      <tool Name="actions/cache@v3"/>
      <parameter Parameter="path: '~/.cargo/registry&#10;&#10;    ~/.cargo/git&#10;&#10;    target&#10;&#10;    '&#10;key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}&#10;"/>
    </command>
    <command Name="check" depends="//@job.10/@command.2">
      <tool Name="actions-rs/cargo@v1"/>
      <parameter Parameter="command: check&#10;args: --examples --workspace --exclude ark-algebra-test-templates --exclude ark-algebra-bench-templates&#10;    --exclude ark-poly-benches --target aarch64-unknown-none&#10;"/>
    </command>
    <command Name="build" depends="//@job.10/@command.3">
      <tool Name="actions-rs/cargo@v1"/>
      <parameter Parameter="command: build&#10;args: --workspace --exclude ark-algebra-test-templates --exclude ark-algebra-bench-templates&#10;    --exclude ark-poly-benches --target aarch64-unknown-none&#10;"/>
    </command>
  </job>
  <job Name="test_against_curves">
    <environment Key="RUSTFLAGS" Value="-Dwarnings"/>
    <tool Name="ubuntu-latest"/>
    <tool Name="strategy:&#10;    matrix:&#10;        curve:&#10;        - bls12_377&#10;        - bls12_381&#10;        - bn254&#10;        - pallas&#10;        - bw6_761&#10;        - mnt4_298&#10;        - mnt6_298&#10;        - ed_on_bls12_377&#10;"/>
    <command Name="Checkout curves">
      <tool Name="actions/checkout@v4"/>
      <parameter Parameter="repository: arkworks-rs/curves&#10;path: curves&#10;"/>
    </command>
    <command Name="Checkout algebra" depends="//@job.11/@command.0">
      <tool Name="actions/checkout@v4"/>
      <parameter Parameter="path: ark-algebra&#10;"/>
    </command>
    <command Name="Install Rust" depends="//@job.11/@command.1">
      <tool Name="actions-rs/toolchain@v1"/>
      <parameter Parameter="profile: minimal&#10;toolchain: stable&#10;override: true&#10;"/>
    </command>
    <command Name="Patch cargo.toml" depends="//@job.11/@command.2">
      <tool Name="if  grep -q &quot;\[patch.crates-io\]&quot; curves/Cargo.toml ; then&#10;    MATCH=$(awk '/\[patch.crates-io\]/{ print NR; exit }' curves/Cargo.toml); &#10;    sed -i &quot;$MATCH,\$d&quot; curves/Cargo.toml&#10;fi&#10;{&#10;  echo      &quot;[patch.crates-io]&quot;;&#10;  echo      &quot;ark-ff = { path = '../ark-algebra/ff' }&quot;;&#10;  echo      &quot;ark-serialize = { path = '../ark-algebra/serialize' }&quot;;&#10;  echo      &quot;ark-ff-macros = { path = '../ark-algebra/ff-macros' }&quot;;&#10;  echo      &quot;ark-ff-asm = { path = '../ark-algebra/ff-asm' }&quot;;&#10;  echo      &quot;ark-ec = { path = '../ark-algebra/ec' }&quot;;&#10;  echo      &quot;ark-algebra-bench-templates = { path = '../ark-algebra/bench-templates' }&quot;&#10;  echo      &quot;ark-algebra-test-templates = { path = '../ark-algebra/test-templates' }&quot;&#10;  echo      &quot;ark-bls12-377 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-bls12-381 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-bn254 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-pallas = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-bw6-761 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-mnt4-298 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-mnt6-298 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-ed-on-bls12-377 = { git = 'https://github.com/arkworks-rs/curves' }&quot;&#10;  echo      &quot;ark-std = { git = 'https://github.com/arkworks-rs/std' }&quot;&#10;  echo      &quot;ark-r1cs-std = { git = 'https://github.com/arkworks-rs/r1cs-std' }&quot;&#10;} &gt;&gt; curves/Cargo.toml&#10;"/>
    </command>
    <command Name="Test on ${{ matrix.curve }}" depends="//@job.11/@command.3">
      <tool Name="cd curves/${{ matrix.curve }} &amp;&amp; cargo test --all-features"/>
    </command>
  </job>
</devops2:Pipeline>
