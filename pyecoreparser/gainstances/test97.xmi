<?xml version='1.0' encoding='UTF-8'?>
<devops2:Pipeline xmlns:xmi="http://www.omg.org/XMI" xmlns:devops2="http://www.example.org/devops2" Name="CI" xmi:version="2.0">
  <when Trigger="push: null&#10;"/>
  <environment Key="BUILD_TYPE" Value="Release"/>
  <environment Key="EM_VERSION" Value="2.0.34"/>
  <environment Key="EM_CACHE_FOLDER" Value="emsdk-cache"/>
  <job Name="build">
    <tool Name="${{matrix.platform.os}}"/>
    <tool Name="strategy:&#10;    fail-fast: false&#10;    matrix:&#10;        platform:&#10;        -   name: Ubuntu GCC&#10;            os: ubuntu-latest&#10;            compiler: g++&#10;            arch: '64'&#10;            cmakepp: ''&#10;            suffix: ''&#10;            flags: -DCMAKE_CXX_COMPILER=g++&#10;        -   name: Ubuntu Clang&#10;            os: ubuntu-latest&#10;            compiler: clang++&#10;            arch: '64'&#10;            cmakepp: ''&#10;            suffix: ''&#10;            flags: -DCMAKE_CXX_COMPILER=clang++&#10;        -   name: Windows 32&#10;            os: windows-latest&#10;            compiler: vs2019&#10;            arch: '32'&#10;            cmakepp: ''&#10;            suffix: ''&#10;            flags: -DCMAKE_PREFIX_PATH=`pwd`/../dependencies -A Win32&#10;        -   name: Windows 64&#10;            os: windows-latest&#10;            compiler: vs2019&#10;            arch: '64'&#10;            cmakepp: ''&#10;            suffix: ''&#10;            flags: -DCMAKE_PREFIX_PATH=`pwd`/../dependencies -A x64&#10;        -   name: MacOS&#10;            os: macos-latest&#10;            compiler: clang++&#10;            arch: '64'&#10;            cmakepp: ''&#10;            suffix: ''&#10;            flags: ''&#10;        -   name: WebAssembly&#10;            os: ubuntu-latest&#10;            compiler: em++&#10;            arch: '32'&#10;            cmakepp: emcmake&#10;            suffix: -emscripten&#10;            flags: -DCMAKE_PREFIX_PATH=`pwd`/../dependencies -DCMAKE_FIND_ROOT_PATH=/&#10;                -DLXGUI_TEST_IMPLEMENTATION=OPENGL_SDL&#10;"/>
    <command Name="Checkout code">
      <tool Name="actions/checkout@v2"/>
      <parameter Parameter="submodules: recursive&#10;"/>
    </command>
    <command Name="Create Build Environment" depends="//@job.0/@ifthenelse.2/@true/@command.0">
      <tool Name="cmake -E make_directory ${{github.workspace}}/build"/>
    </command>
    <command Name="Configure CMake" depends="//@job.0/@ifthenelse.6/@true/@command.0">
      <tool Name="${{matrix.platform.cmakepp}} cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DLXGUI_BUILD_EXAMPLES=0 -DCMAKE_INSTALL_PREFIX=`pwd`/../dependencies ${{matrix.platform.flags}}"/>
    </command>
    <command Name="Build" depends="//@job.0/@command.2">
      <tool Name="cmake --build . --config ${BUILD_TYPE} --parallel 2"/>
    </command>
    <command Name="Install" depends="//@job.0/@command.3">
      <tool Name="cmake --install . --config ${BUILD_TYPE}"/>
    </command>
    <command Name="Build example SDL" depends="//@job.0/@command.4">
      <tool Name="rm -rf *&#10;${{matrix.platform.cmakepp}} cmake ../examples/sdl${{matrix.platform.suffix}} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=`pwd`/../dependencies ${{matrix.platform.flags}}&#10;cmake --build . --config ${BUILD_TYPE} --parallel 2&#10;"/>
    </command>
    <command Name="Build example OpenGL-SDL" depends="//@job.0/@command.5">
      <tool Name="rm -rf *&#10;${{matrix.platform.cmakepp}} cmake ../examples/opengl-sdl${{matrix.platform.suffix}} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=`pwd`/../dependencies ${{matrix.platform.flags}}&#10;cmake --build . --config ${BUILD_TYPE} --parallel 2&#10;"/>
    </command>
    <ifthenelse Condition="matrix.platform.compiler == 'clang++' &amp;&amp; matrix.platform.os == 'ubuntu-latest'">
      <true>
        <command Name="Setup Clang" depends="//@job.0/@command.0">
          <tool Name="sudo apt install clang"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler == 'em++'">
      <true>
        <command Name="Setup Emscripten cache" depends="//@job.0/@ifthenelse.0/@true/@command.0">
          <tool Name="actions/cache@v2.1.7"/>
          <parameter Parameter="path: ${{env.EM_CACHE_FOLDER}}&#10;key: ${{env.EM_VERSION}}-${{ runner.os }}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler == 'em++'">
      <true>
        <command Name="Setup Emscripten" depends="//@job.0/@ifthenelse.1/@true/@command.0">
          <tool Name="mymindstorm/setup-emsdk@v11"/>
          <parameter Parameter="version: ${{env.EM_VERSION}}&#10;actions-cache-folder: ${{env.EM_CACHE_FOLDER}}&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="runner.os == 'Linux' &amp;&amp; matrix.platform.compiler != 'em++'">
      <true>
        <command Name="Get Linux dependencies" depends="//@job.0/@command.1">
          <tool Name="sudo apt-get update&#10;sudo apt-get install libz-dev libpng-dev libfreetype6-dev libglew-dev libglu1-mesa-dev libsfml-dev liblua5.2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-dev&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler == 'em++'">
      <true>
        <command Name="Get Emscripten dependencies" depends="//@job.0/@ifthenelse.3/@true/@command.0">
          <tool Name="unzip wasm.zip"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="runner.os == 'Windows'">
      <true>
        <command Name="Get Windows dependencies" depends="//@job.0/@ifthenelse.4/@true/@command.0">
          <tool Name="unzip windows-dependencies-${{matrix.platform.compiler}}-${{matrix.platform.arch}}.zip"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="runner.os == 'macOS'">
      <true>
        <command Name="Get MacOS dependencies" depends="//@job.0/@ifthenelse.5/@true/@command.0">
          <tool Name="brew install sfml lua zlib libpng freetype glew sdl2 sdl2_ttf sdl2_image"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler != 'em++'">
      <true>
        <command Name="Build example SFML" depends="//@job.0/@command.6">
          <tool Name="rm -rf *&#10;${{matrix.platform.cmakepp}} cmake ../examples/sfml${{matrix.platform.suffix}} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=`pwd`/../dependencies ${{matrix.platform.flags}}&#10;cmake --build . --config ${BUILD_TYPE} --parallel 2&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler != 'em++'">
      <true>
        <command Name="Build example OpenGL-SFML" depends="//@job.0/@ifthenelse.7/@true/@command.0">
          <tool Name="rm -rf *&#10;${{matrix.platform.cmakepp}} cmake ../examples/opengl-sfml${{matrix.platform.suffix}} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_PREFIX_PATH=`pwd`/../dependencies ${{matrix.platform.flags}}&#10;cmake --build . --config ${BUILD_TYPE} --parallel 2&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler == 'em++' &amp;&amp; github.ref == 'refs/heads/main'">
      <true>
        <command Name="Prepare publish package" depends="//@job.0/@ifthenelse.8/@true/@command.0">
          <tool Name="mkdir demo&#10;cp lxgui-test*${{matrix.platform.suffix}}* demo/&#10;"/>
        </command>
      </true>
    </ifthenelse>
    <ifthenelse Condition="matrix.platform.compiler == 'em++' &amp;&amp; github.ref == 'refs/heads/main'">
      <true>
        <command Name="Publish" depends="//@job.0/@ifthenelse.9/@true/@command.0">
          <tool Name="JamesIves/github-pages-deploy-action@4.1.0"/>
          <parameter Parameter="branch: gh-pages&#10;folder: ${{github.workspace}}/bin/demo&#10;target-folder: demo&#10;"/>
        </command>
      </true>
    </ifthenelse>
  </job>
</devops2:Pipeline>
